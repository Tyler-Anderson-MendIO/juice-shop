name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
  
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ github.repository.lower }}/${{ github.run_id }}

    - name: Downloading the Scanners
      run: |
        echo "Downloading the CLI"
        curl https://downloads.mend.io/cli/linux_amd64/mend -o /usr/local/bin/mend && chmod +x /usr/local/bin/mend

    - name: Validating the CLI
      run: |
        echo "Verifying the CLI"
        mend version

# Checking all Package Manager Dependencies
    - name: Check for Go Modules files - go.mod
      id: go_mod
      uses: andstor/file-existence-action@v3
      with:
        files: "go.mod"

    - name: Running Go Modules
      if: steps.go_mod.outputs.files_exists == 'true'
      run: |
        echo "Go Modules Files Found"
        echo "Building Go Modules"
        go build

    - name: Check for Gradle files - build.gradle
      id: build_gradle
      uses: andstor/file-existence-action@v3
      with:
        files: "build.gradle"

    - name: Running Gradle
      if: steps.build_gradle.outputs.files_exists == 'true'
      run: |
        echo "Gradle Files Found"
        echo "Building Gradle"
        gradle build

    - name: Check for Maven files - pom.xml
      id: pom_xml
      uses: andstor/file-existence-action@v3
      with:
        files: "pom.xml"

    - name: Running Maven
      if: steps.pom_xml.outputs.files_exists == 'true'
      run: |
        echo "Maven Files Found"
        echo "Building Maven"
        mvn clean install

    - name: Check for JavaScript with npm files - package.json
      id: package_json
      uses: andstor/file-existence-action@v3
      with:
        files: "package.json"

    - name: Check for JavaScript with npm files - package-lock.json
      id: package_lock_json
      uses: andstor/file-existence-action@v3
      with:
        files: "package-lock.json"

    - name: Check for JavaScript with npm files - node_modules
      id: node_modules
      uses: andstor/file-existence-action@v3
      with:
        files: "node_modules"

    - name: Check for JavaScript with npm files - npm-shrinkwrap.json
      id: npm_shrinkwrap_json
      uses: andstor/file-existence-action@v3
      with:
        files: "npm-shrinkwrap.json"

    - name: Running npm
      if: steps.package_json.outputs.files_exists == 'true' || steps.package_lock_json.outputs.files_exists == 'true' || steps.node_modules.outputs.files_exists == 'true' || steps.npm_shrinkwrap_json.outputs.files_exists == 'true'
      run: |
        echo "NPM Files Found"
        echo "Building NPM"
        npm install

    - name: Check for Composer files - composer.json
      id: composer_json
      uses: andstor/file-existence-action@v3
      with:
        files: "composer.json"

    - name: Check for Composer files - composer.lock
      id: composer_lock
      uses: andstor/file-existence-action@v3
      with:
        files: "composer.lock"

    - name: Running Composer
      if: steps.composer_json.outputs.files_exists == 'true' || steps.composer_lock.outputs.files_exists == 'true'
      run: |
        echo "Composer Files Found"
        echo "Building Composer"
        composer install

    - name: Check for pip files - requirements.txt
      id: requirements_txt
      uses: andstor/file-existence-action@v3
      with:
        files: "requirements.txt"

    - name: Running pip
      if: steps.requirements_txt.outputs.files_exists == 'true'
      run: |
        echo "pip Files Found"
        echo "Building pip"
        pip install -r requirements.txt

    - name: Check for Bundler files - Gemfile
      id: gemfile
      uses: andstor/file-existence-action@v3
      with:
        files: "Gemfile"

    - name: Check for Bundler files - Gemfile.lock
      id: gemfile_lock
      uses: andstor/file-existence-action@v3
      with:
        files: "Gemfile.lock"

    - name: Running Bundler
      if: steps.gemfile.outputs.files_exists == 'true' || steps.gemfile_lock.outputs.files_exists == 'true'
      run: |
        echo "Bundler Files Found"
        echo "Building Bundler"
        bundle install

    - name: Check for SBT files - sbt files
      id: sbt_files
      uses: andstor/file-existence-action@v3
      with:
        files: "sbt files"

    - name: Running SBT
      if: steps.sbt_files.outputs.files_exists == 'true'
      run: |
        echo "SBT Files Found"
        echo "Building SBT"
        sbt compile

    
